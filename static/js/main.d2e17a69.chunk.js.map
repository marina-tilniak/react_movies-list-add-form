{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","hasTitleError","hasImgUrlError","hasImdbUrlError","hasImdbIdError","handleChange","event","target","name","value","capitalizedName","charAt","toUpperCase","slice","setState","handleDescriptionChange","getNewMovie","clearInputs","isValidTitle","isCorrectUrl","url","match","isValidImgUrl","correctImgUrl","isValidImdbUrl","correctImdbUrl","isValidImdbId","handleSubmit","preventDefault","props","onAdd","this","onSubmit","htmlFor","type","id","onChange","onBlur","classNames","disabled","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2e17a69.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.min.css';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  hasTitleError: boolean,\n  hasImgUrlError: boolean,\n  hasImdbUrlError: boolean,\n  hasImdbIdError: boolean,\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    hasTitleError: false,\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    hasImdbIdError: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n      [`has${capitalizedName}Error`]: false,\n    }));\n  };\n\n  handleDescriptionChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      description: event.target.value,\n    });\n  };\n\n  getNewMovie = () => {\n    const movie: Movie = this.state;\n\n    return movie;\n  };\n\n  clearInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  isValidTitle = () => {\n    const { title } = this.state;\n\n    if (!title) {\n      this.setState({ hasTitleError: !title });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  isCorrectUrl = (url: string) => {\n    return url.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n  };\n\n  isValidImgUrl = () => {\n    const { imgUrl } = this.state;\n    const correctImgUrl = imgUrl && this.isCorrectUrl(imgUrl);\n\n    if (!correctImgUrl) {\n      this.setState({ hasImgUrlError: !correctImgUrl });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  isValidImdbUrl = () => {\n    const { imdbUrl } = this.state;\n    const correctImdbUrl = imdbUrl && this.isCorrectUrl(imdbUrl);\n\n    if (!correctImdbUrl) {\n      this.setState({ hasImdbUrlError: !correctImdbUrl });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  isValidImdbId = () => {\n    const { imdbId } = this.state;\n\n    if (!imdbId) {\n      this.setState({ hasImdbIdError: !imdbId });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.isValidTitle()\n      && this.isValidImgUrl()\n      && this.isValidImdbUrl()\n      && this.isValidImdbId()) {\n      this.props.onAdd(this.getNewMovie());\n      this.clearInputs();\n    }\n  };\n\n  render() {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n      hasTitleError, hasImgUrlError, hasImdbUrlError, hasImdbIdError,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"is-flex is-flex-direction-column\"\n      >\n        <label htmlFor=\"title\" className=\"is-block\">\n          Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            onBlur={this.isValidTitle}\n            className={classNames('input', {\n              'is-danger': hasTitleError,\n            })}\n          />\n        </label>\n        {hasTitleError && (\n          <span className=\"is-size-7 has-text-danger-dark\">\n            Please enter the title\n          </span>\n        )}\n\n        <label htmlFor=\"imgUrl\" className=\"is-block\">\n          imgUrl:\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.isValidImgUrl}\n            className={classNames('input', {\n              'is-danger': hasImgUrlError,\n            })}\n          />\n        </label>\n\n        {hasImgUrlError && (\n          <span className=\"is-size-7 has-text-danger-dark\">\n            Please enter correct URL\n          </span>\n        )}\n\n        <label htmlFor=\"imdbUrl\" className=\"is-block\">\n          imdbUrl:\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.isValidImdbUrl}\n            className={classNames('input', {\n              'is-danger': hasImgUrlError,\n            })}\n          />\n        </label>\n        {hasImdbUrlError && (\n          <span className=\"is-size-7 has-text-danger-dark\">\n            Please enter correct IMDB URL\n          </span>\n        )}\n\n        <label htmlFor=\"imdbId\" className=\"is-block\">\n          imdbId:\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            onBlur={this.isValidImdbId}\n            className={classNames('input', {\n              'is-danger': hasImdbIdError,\n            })}\n          />\n        </label>\n        {hasImdbIdError && (\n          <span className=\"is-size-7 has-text-danger-dark\">\n            Please enter the IMDB id\n          </span>\n        )}\n\n        <label htmlFor=\"description\" className=\"is-block\">\n          Description:\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={this.handleDescriptionChange}\n            className=\"textarea\"\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"button is-dark is-outlined mt-5\"\n          disabled={\n            hasTitleError\n            || hasImgUrlError\n            || hasImdbUrlError\n            || hasImdbIdError\n          }\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}